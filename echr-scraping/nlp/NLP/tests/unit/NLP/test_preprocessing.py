from cobee.tests.unit import BaseUnitTestCase

from cobee.NLP import preprocessing
from nltk.corpus import wordnet


class PreprocessingTestCase(BaseUnitTestCase):

    def test_treebankToWordnetTag(self):
        validTags = ['J', 'VB', 'N', 'R', 'RRRR']
        expectedTags = [wordnet.ADJ, wordnet.VERB,
                        wordnet.NOUN, wordnet.ADV, wordnet.ADV]
        invalidTags = ['A', 'B', 'ZZZ']

        for tag in validTags:
            self.assertFalse(preprocessing.TreebankToWordnetTag(
                tag) == None, 'A valid tag should not return None')

        for tag in invalidTags:
            self.assertEqual(preprocessing.TreebankToWordnetTag(
                tag), None, 'Invalid tags should return None value')

        for i, tag in enumerate(validTags):
            self.assertEqual(preprocessing.TreebankToWordnetTag(
                tag), expectedTags[i], 'A tag is not orrectly transformed.')

        self.assertRaises(
            AttributeError, preprocessing.TreebankToWordnetTag, None)

    def test_convertToWordnetTag(self):
        tokens = [('token', 'J'), ('', 'VB'), (None, 'N'),
                  ('token', 'RRRR'), ('word', 'A')]
        expected = [('token', wordnet.ADJ), ('', wordnet.VERB),
                    (None, wordnet.NOUN), ('token', wordnet.ADV)]

        self.assertEqual(preprocessing.convertToWordnetTag(tokens), expected)

    def test_convertToWordnetTag(self):
        tokens = [('token', wordnet.ADJ), ('', wordnet.VERB), (None,
                                                               wordnet.NOUN), ('token', wordnet.ADV), ('word', wordnet.ADJ)]

        result = preprocessing.filterTokensWords(
            tokens, accepted=None, rejected=None)
        self.assertEqual(result, tokens)

        accepted = [wordnet.ADJ]
        expected = [('token', wordnet.ADJ), ('word', wordnet.ADJ)]
        result = preprocessing.filterTokensWords(tokens, accepted=accepted)
        self.assertEqual(result, expected)

        result = preprocessing.filterTokensWords(
            tokens, accepted=accepted, rejected=accepted)
        self.assertEqual(result, [])

        expected = [('', wordnet.VERB), (None, wordnet.NOUN),
                    ('token', wordnet.ADV)]
        result = preprocessing.filterTokensWords(tokens, rejected=accepted)
        self.assertEqual(result, expected)

    def test_cleanTokens(self):
        tokens = 'a very useless sentence with small and long words and even non-existing words such as wqrp.'.split()

        expected = 'useless sentence small long words even non-existing words wqrp.'.split()
        output = preprocessing.cleanTokens(tokens, min_length=3)
        self.assertEqual(output, expected)

        expected = 'useless sentence small words non-existing words wqrp.'.split()
        output = preprocessing.cleanTokens(tokens, min_length=5)
        self.assertEqual(output, expected)

        expected = 'useless sentence non-existing'.split()
        output = preprocessing.cleanTokens(tokens, min_length=7)
        self.assertEqual(output, expected)

        expected = ''.split()
        output = preprocessing.cleanTokens(tokens, min_length=15)
        self.assertEqual(output, expected)

    def test_prepareText(self):
        sentence1 = "International Business Machines Corporation (commonly referred to as IBM) is an American multinational technology company headquartered in Armonk, New York, United States, with operations in over 170 countries. The company originated in 1911 as the Computing-Tabulating-Recording Company (CTR) and was renamed International Business Machines in 1924. IBM manufactures and markets computer hardware, middleware and software, and offers hosting and consulting services in areas ranging from mainframe computers to nanotechnology. IBM is also a major research organization, holding the record for most patents generated by a business (as of 2017) for 24 consecutive years. Inventions by IBM include the automated teller machine (ATM), the floppy disk, the hard disk drive, the magnetic stripe card, the relational database, the SQL programming language, the UPC barcode, and dynamic random-access memory (DRAM)."
        sentence2 = "Google is an American multinational technology company specializing in Internet-related services and products that include online advertising technologies, search, cloud computing, software, and hardware. Google was founded in 1996 by Larry Page and Sergey Brin while they were Ph.D. students at Stanford University, California. Together, they own about 14 percent of its shares and control 56 percent of the stockholder voting power through supervoting stock. They incorporated Google as a privately held company on September 4, 1998. An initial public offering (IPO) took place on August 19, 2004, and Google moved to its new headquarters in Mountain View, California, nicknamed the Googleplex."
        sentence3 = "Microsoft Corporation (commonly referred to as Microsoft or MS) is an American multinational technology company headquartered in Redmond, Washington, that develops, manufactures, licenses, supports and sells computer software, consumer electronics and personal computers and services. Its best known software products are the Microsoft Windows line of operating systems, Microsoft Office office suite, and Internet Explorer and Edge web browsers. Its flagship hardware products are the Xbox video game consoles and the Microsoft Surface tablet lineup. As of 2011, it was the world's largest software maker by revenue, and one of the world's most valuable companies."
        sentence4 = "Amazon.com, often simply Amazon, is an American electronic commerce and cloud computing company, founded in July 5, 1994, by Jeff Bezos and based in Seattle, Washington. It is the largest Internet-based retailer in the world by total sales and market capitalization. Amazon.com started as an online bookstore, later diversifying to sell DVDs, Blu-rays, CDs, video downloads/streaming, MP3 downloads/streaming, audiobook downloads/streaming, software, video games, electronics, apparel, furniture, food, toys, and jewelry. The company also produces consumer electronics—notably, Amazon Kindle e-readers, Fire tablets, and Fire TV—and is the world's largest provider of cloud infrastructure services (IaaS). Amazon also sells certain low-end products like USB cables under its in-house brand AmazonBasics. Amazon has separate retail websites for the United States, the United Kingdom and Ireland, France, Canada, Germany, Italy, Spain, Netherlands, Australia, Brazil, Japan, China, India, and Mexico. Amazon also offers international shipping to certain other countries for some of its products. In 2016, Dutch and Polish language versions of the German Amazon website were launched."

        inputs = [sentence1, sentence2, sentence3, sentence4, ""]

        expected = [
            ['ibm', 'ibm', 'ibm', 'ibm', 'computer', 'computer', 'machine', 'machine', 'disk', 'disk', 'record', 'record',
                'company', 'company', 'company', 'international_business_machine', 'international_business_machine'],
            ['technology', 'technology', 'google', 'google', 'google', 'google',
                'california', 'california', 'company', 'company', 'percent', 'percent'],
            ['software', 'software', 'software', 'world', 'world', 'product', 'product', 'computer', 'computer',
                'office', 'office', 'microsoft', 'microsoft', 'microsoft', 'microsoft', 'microsoft', 'company', 'company'],
            ['sell', 'sell', 'world', 'world', 'amazon', 'amazon', 'amazon', 'amazon', 'amazon', 'amazon', 'cloud', 'cloud', 'downloads', 'downloads', 'electronics', 'electronics', 'certain', 'certain', 'also', 'also', 'base', 'base', 'product', 'product', 'stream',
                'stream', 'large', 'large', 'fire', 'fire', 'company', 'company', 'united', 'united', 'website', 'website', 'video', 'video', 'amazon_com', 'amazon_com', 'downloads_stream', 'downloads_stream', 'downloads_stream', 'amazon_also', 'amazon_also'],
            ['']
        ]

        for i, t in enumerate(inputs):
            self.assertEqual(preprocessing.prepareText(
                t).sort(), expected[i].sort())

        self.assertRaises(TypeError, preprocessing.prepareText, None)
